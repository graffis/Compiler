; Symbol table GLOBAL
; Function: INT mod([INT, INT])
; Function: INT main([])

; Symbol table mod
; name b type INT location 12
; name a type INT location 16
; name q type FLOAT location -4

; Symbol table main
; name x type INT location -4
; name y type INT location -8

Function mod
	Statement list:
		AssignNode:
			VarNode: q
			BinaryOpNode: DIV
				CastNode: FLOAT
					VarNode: a
				CastNode: FLOAT
					VarNode: b
		Write: 
			VarNode: q
		Return: 
			BinaryOpNode: SUB
				VarNode: a
				BinaryOpNode: MUL
					CastNode: INT
						VarNode: q
					VarNode: b
Function main
	Statement list:
		Read: 
			VarNode: x
		Read: 
			VarNode: y
		Write: 
			Function call mod
				VarNode: x
				VarNode: y
		Return: 
			IntLitNode: 0
.section .text
;Current temp: null
;IR Code: 
MV fp, sp
JR func_main
HALT

func_mod:
SW fp, 0(sp)
MV fp, sp
ADDI sp, sp, -4
ADDI sp, sp, -4
SW t1, 0(sp)
ADDI sp, sp, -4
SW t2, 0(sp)
ADDI sp, sp, -4
SW t3, 0(sp)
ADDI sp, sp, -4
SW t4, 0(sp)
ADDI sp, sp, -4
SW t5, 0(sp)
ADDI sp, sp, -4
SW t6, 0(sp)
ADDI sp, sp, -4
SW t7, 0(sp)
ADDI sp, sp, -4
SW t8, 0(sp)
ADDI sp, sp, -4
SW t9, 0(sp)
ADDI sp, sp, -4
SW t10, 0(sp)
ADDI sp, sp, -4
SW t11, 0(sp)
ADDI sp, sp, -4
SW t12, 0(sp)
ADDI sp, sp, -4
SW t13, 0(sp)
ADDI sp, sp, -4
SW t14, 0(sp)
ADDI sp, sp, -4
FSW f1, 0(sp)
ADDI sp, sp, -4
FSW f2, 0(sp)
ADDI sp, sp, -4
FSW f3, 0(sp)
ADDI sp, sp, -4
FSW f4, 0(sp)
ADDI sp, sp, -4
FSW f5, 0(sp)
ADDI sp, sp, -4
ADDI t5, fp, -4
ADDI t1, fp, 16
LW t2, 0(t1)
IMOVF.S f1, t2
ADDI t3, fp, 12
LW t4, 0(t3)
IMOVF.S f2, t4
FDIV.S f3, f1, f2
FSW f3, 0(t5)
ADDI t6, fp, -4
FLW f4, 0(t6)
PUTF f4
ADDI t12, fp, 16
LW t13, 0(t12)
ADDI t7, fp, -4
FLW f5, 0(t7)
FMOVI.S t8, f5
ADDI t9, fp, 12
LW t10, 0(t9)
MUL t11, t8, t10
SUB t14, t13, t11
SW t14, 8(fp)
J func_ret_mod
func_ret_mod:
ADDI sp, sp, 4
FLW f5, 0(sp)
ADDI sp, sp, 4
FLW f4, 0(sp)
ADDI sp, sp, 4
FLW f3, 0(sp)
ADDI sp, sp, 4
FLW f2, 0(sp)
ADDI sp, sp, 4
FLW f1, 0(sp)
ADDI sp, sp, 4
LW t14, 0(sp)
ADDI sp, sp, 4
LW t13, 0(sp)
ADDI sp, sp, 4
LW t12, 0(sp)
ADDI sp, sp, 4
LW t11, 0(sp)
ADDI sp, sp, 4
LW t10, 0(sp)
ADDI sp, sp, 4
LW t9, 0(sp)
ADDI sp, sp, 4
LW t8, 0(sp)
ADDI sp, sp, 4
LW t7, 0(sp)
ADDI sp, sp, 4
LW t6, 0(sp)
ADDI sp, sp, 4
LW t5, 0(sp)
ADDI sp, sp, 4
LW t4, 0(sp)
ADDI sp, sp, 4
LW t3, 0(sp)
ADDI sp, sp, 4
LW t2, 0(sp)
ADDI sp, sp, 4
LW t1, 0(sp)
MV sp, fp
LW fp, 0(fp)
RET

func_main:
SW fp, 0(sp)
MV fp, sp
ADDI sp, sp, -4
ADDI sp, sp, -8
SW t1, 0(sp)
ADDI sp, sp, -4
SW t2, 0(sp)
ADDI sp, sp, -4
SW t3, 0(sp)
ADDI sp, sp, -4
SW t4, 0(sp)
ADDI sp, sp, -4
SW t5, 0(sp)
ADDI sp, sp, -4
SW t6, 0(sp)
ADDI sp, sp, -4
SW t7, 0(sp)
ADDI sp, sp, -4
SW t8, 0(sp)
ADDI sp, sp, -4
GETI t1
SW t1, -4(fp)
GETI t2
SW t2, -8(fp)
ADDI t3, fp, -4
LW t4, 0(t3)
SW t4, 0(sp)
ADDI sp, sp, -4
ADDI t5, fp, -8
LW t6, 0(t5)
SW t6, 0(sp)
ADDI sp, sp, -4
ADDI sp, sp, -4
SW ra, 0(sp)
ADDI sp, sp, -4
JR func_mod
ADDI sp, sp, 4
LW ra, 0(sp)
ADDI sp, sp, 4
LW t7, 0(sp)
ADDI sp, sp, 8
PUTI t7
LI t8, 0
SW t8, 8(fp)
J func_ret_main
func_ret_main:
ADDI sp, sp, 4
LW t8, 0(sp)
ADDI sp, sp, 4
LW t7, 0(sp)
ADDI sp, sp, 4
LW t6, 0(sp)
ADDI sp, sp, 4
LW t5, 0(sp)
ADDI sp, sp, 4
LW t4, 0(sp)
ADDI sp, sp, 4
LW t3, 0(sp)
ADDI sp, sp, 4
LW t2, 0(sp)
ADDI sp, sp, 4
LW t1, 0(sp)
MV sp, fp
LW fp, 0(fp)
RET



.section .strings
